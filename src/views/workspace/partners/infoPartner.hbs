<link href="/style/info.css" rel="stylesheet" />

{{> modalDeliver}}
{{> modalEditPartner}}

<div class="Info-contenedor" id="stateInfoPartner">
    <!-- TODO OK SLIDER -->
    <div class="Slider">
        {{#each partner}}
            <div class="Slider-move">
                <div class="Slider-card isActive">
                    <a class="Slider-a isActivo"
                        onClick="infor({{this.partnerID}})">Information</a>
                </div>
                <div class="Slider-card">
                    <a class="Slider-a" onClick="inforActive({{this.partnerID}})">Active
                        Reserves
                    </a>
                </div>
                <div class="Slider-card">
                    <a class="Slider-a" onClick="inforHistory({{this.partnerID}})"
                        style="cursor: pointer;">Reservation
                        History
                    </a>
                </div>
            </div>
            <button class="Slider-arrow isPrev" onclick="avanzaSlide(-1,
                {{this.partnerID}})">
                <svg class="Slider-svg" xmlns="http://www.w3.org/2000/svg"
                    width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0
                        .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1
                        0-.708l6-6a.5.5 0 0 1 .708 0z" />
                    </svg>
            </button>
            <button class="Slider-arrow isNext" onclick="avanzaSlide(1,
                {{this.partnerID}})">
                <svg class="Slider-svg" xmlns="http://www.w3.org/2000/svg"
                    width="16" height="16" fill="currentColor" viewBox="0 0 16
                    16">
                    <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708
                        0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293
                        8 4.646 2.354a.5.5 0 0 1 0-.708z" />
                    </svg>
            </button>
            <ul class="Slider-lines">
                <li class="Slider-line">
                    <button class="Slider-btn isActive"
                        onClick="infor({{this.partnerID}})">
                    </button>
                </li>
                <li class="Slider-line">
                    <button class="Slider-btn"
                        onClick="inforActive({{this.partnerID}})">
                    </button>
                </li>
                <li class="Slider-line">
                    <button class="Slider-btn"
                        onClick="inforHistory({{this.partnerID}})">
                    </button>
                </li>
            </ul>
        {{/each}}
    </div>
    <!-- TODO SUB CONTENEDOR -->
    <div class="Info-subcontenedor">
        <div class="Info-bloque isActivo isAuto" id="bloqueInfo">
            <div class="Info-personal Personal">
                <div class="Personal-data isButton">
                    <div class="ColumnA">
                        <button type="button" class="btn btn-outline-danger"><i class="fa-regular fa-file-pdf"></i></button>
                        <button type="button" class="btn btn-outline-success"><i class="fa-regular fa-file-excel"></i></button>
                    </div>
                    <div class="ColumnB">
                        {{#each partner}}
                            <button id="btnEditPartner" onClick=edit({{this.partnerID}}) type="button"  class="btn btn-outline-primary" title="Edit Partner" data-toggle="modal" data-target="#modalEditPartner" href="#edit"><i class="fa-regular fa-pen-to-square"></i> Edit Information</button>
                            <button id="btnReservedBook" onClick=reservedBook({{this.partnerID}}) class="btn btn-secondary" title="Reserve a Book"><i class="fa-solid fa-calendar-days"></i> Reserve a Book</button>
                        {{/each}}
                    </div>
                </div>
                <hr>
                <div class="Personal-data">
                    {{#each partner}}
                        <div class="ColumnA">
                            <h3 class="Column-h3">Partner ID: </h3>
                            <span class="Column-span">0000{{this.partnerID}}</span>
                        </div>
                        <div class="ColumnB">
                            <h3 class="Column-h3">Created At: </h3>
                            <span class="Column-span">{{this.date}}</span>
                        </div>
                    {{/each}}
                </div>
                <div class="Personal-data">
                    {{#each partner}}
                        <div class="ColumnA">
                            <h3 class="Column-h3"></h3>
                            <span class="Column-span"></span>
                        </div>
                        <div class="ColumnB">
                            <h3 class="Column-h3">Update At: </h3>
                            <span class="Column-span">{{this.updateDate}}</span>
                        </div>
                    {{/each}}
                </div>
                <hr>
                <div class="Personal-data">
                    {{#each partner}}
                        <div class="ColumnA">
                            <h3 class="Column-h3">DNI: </h3>
                            <span class="Column-span">{{this.dni}}</span>
                        </div>
                        <div class="ColumnB">
                            <h3 class="Column-h3">Scanner: </h3>
                            <span class="Column-span">{{this.scanner}}</span>
                        </div>
                    {{/each}}
                </div>
                <hr>
                <div class="Personal-data">
                    {{#each partner}}
                        <div class="ColumnA">
                            <h3 class="Column-h3">Nane: </h3>
                            <span class="Column-span">{{this.name}}</span>
                        </div>
                        <div class="ColumnB">
                            <h3 class="Column-h3">Lastname: </h3>
                            <span class="Column-span">{{this.lastname}}</span>
                        </div>
                    {{/each}}
                </div>
                <hr>
                <div class="Personal-data">
                    {{#each partner}}
                        <div class="ColumnA">
                            <h3 class="Column-h3">Population: </h3>
                            <span class="Column-span">{{this.population}}</span>
                        </div>
                        <div class="ColumnB">
                            <h3 class="Column-h3">Direction: </h3>
                            <span class="Column-span">{{this.direction}}</span>
                        </div>
                    {{/each}}
                </div>
                <hr>
                <div class="Personal-data">
                    {{#each partner}}
                        <div class="ColumnA">
                            <h3 class="Column-h3">Phone (Mobile) :</h3>
                            <span class="Column-span">{{this.phone1}}</span>
                        </div>
                        <div class="ColumnB">
                            <h3 class="Column-h3">Phone (Landline) :</h3>
                            <span class="Column-span">{{this.phone2}}</span>
                        </div>
                    {{/each}}
                </div>
                <hr>
                <div class="Personal-data">
                    {{#each partner}}
                        <div class="ColumnA">
                            <h3 class="Column-h3">Email :</h3>
                            <span class="Column-span">{{this.email}}</span>
                        </div>
                        <div class="ColumnB">
                            <h3 class="Column-h3"></h3>
                            <span class="Column-span"></span>
                        </div>
                    {{/each}}
                </div>
            </div>
            {{#if infoFamily}}
                <div class="Info-family">
                    <hr>
                    <div class="isFamily" id="infoBloqueFamily">
                        <div class="Bloque-table Dashboard-row">
                            <table class="Dashboard-table table table-bordered
                                display wrap" id="tablePartnerFamily"
                                cellspacing="0" width="100%">
                                <thead class="Dashboard-head">
                                    <tr>
                                        <th>DNI</th>
                                        <th>NAME</th>
                                        <th>LASTNAME</th>
                                        <th>CREATED AT</th>
                                    </tr>
                                </thead>
                                <tbody id="familyData">
                                    {{#each infoFamily}}
                                    <tr>
                                        <td><a href=/workspace/partners/info/{{this.partnerID}} style='color: blue'">{{this.partnerDni}}</a></td>
                                        <td>{{this.partnerName}}</td>
                                        <td>{{this.partnerLastname}}</td>
                                        <td>{{this.partnerRecordDate}}</td>
                                    </tr>
                                    {{/each}}
                                </tbody>
                                <tfoot class="Dashboard-foot">
                                    <tr>
                                        <th>DNI</th>
                                        <th>NAME</th>
                                        <th>LASTNAME</th>
                                        <th>CREATED AT</th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
            {{/if}}
            <div class="Personal-data isButton">
                <div class="ColumnA">
                    <button></button>
                    <button></button>
                </div>
                <div class="ColumnB">
                    {{#each partner}}
                        <button class="btn btn-danger" onClick=deletePartner({{this.partnerID}})  type="button">Delete</button>
                    {{/each}}
                </div>
            </div>
        </div>

        <div class="Info-bloque" id="infoBloqueActive">
            <div class="Bloque-table Dashboard-row">
                <div id="spinnerActive" style="margin-top: 2em">
                    {{> loading}}
                </div>
                <table class="Dashboard-table table table-bordered
                    display wrap" id="tablePartnerActive"
                    cellspacing="0" width="100%">
                    <thead class="Dashboard-head">
                        <tr>
                            <th>TITLE</th>
                            <th>ISBN</th>
                            <th>AUTHOR</th>
                            <th>RESERVATION DATE</th>
                            <th>ACTIONS</th>
                        </tr>
                    </thead>
                    <tbody id="activeData">
                    </tbody>
                    <tfoot class="Dashboard-foot">
                        <tr>
                            <th>TITLE</th>
                            <th>ISBN</th>
                            <th>AUTHOR</th>
                            <th>RESERVATION DATE</th>
                            <th>ACTIONS</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>

        <div class="Info-bloque" id="infoBloqueHistory">
            <div class="Bloque-table Dashboard-row">
                <div id="spinnerHistory" style="margin-top: 2em">
                    {{> loading}}
                </div>
                <table class="Dashboard-table table table-bordered
                    display wrap" id="tablePartnerHistory"
                    cellspacing="0" width="100%">
                    <thead class="Dashboard-head">
                        <tr>
                            <th>TITLE</th>
                            <th>ISBN</th>
                            <th>AUTHOR</th>
                            <th>RESERVATION DATE</th>
                            <th>DELIVER DATE</th>
                            <th>SCORE</th>
                            <th>REVIEW</th>
                        </tr>
                    </thead>
                    <tbody id="historyData">
                    </tbody>
                    <tfoot class="Dashboard-foot">
                        <tr>
                            <th>TITLE</th>
                            <th>ISBN</th>
                            <th>AUTHOR</th>
                            <th>RESERVATION DATE</th>
                            <th>DELIVER DATE</th>
                            <th>SCORE</th>
                            <th>REVIEW</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>

    </div>

</div>

<script defer src="/scripts/partners.js"></script>

<script>
    const editBtn = document.querySelector(".edit");
    const sliderCard = document.querySelectorAll(".Slider-card");
    const sliderButton = document.querySelectorAll(".Slider-a");
    const linesButton = document.querySelectorAll(".Slider-btn");
    const bloque = document.querySelectorAll(".Info-bloque");
    const tbodyHistory = document.getElementById("historyData");
    const tbodyActive = document.getElementById("activeData");
    const infoBloqueHistory = document.getElementById("infoBloqueHistory");
    const infoBloqueActive = document.getElementById("infoBloqueActive");
    const bloqueInfo = document.getElementById("bloqueInfo");
    let indice = 1;

    //TODO ✅ CARGA DATA FAMILY
    $(document).ready(function () {
        tableC = $("#tablePartnerFamily").DataTable({
            ordering: true,
            responsive: true,
            order: [[0, "desc"]],
            retrieve: true
        });
    });

    //TODO ✅ INFORMATION
    async function infor(partnerID){
        idPartner = partnerID;
        indice = 1;
    }

    async function noDataFound() {
        try{
            tableA.destroy();
        } catch (error) {}
        tbodyActive.innerHTML = "";
        createdTableActive();
    };

    async function noDataFoundActive() {
        createdTableActive();
    };

    async function noDataFoundHistory() {
        createdTableHistory();
    };

    // DELIVER
        // TODO ✅ ENTEGA DEL LIBRO
        async function deliverBook(bookID, bookingID, count) {
            try {
                const idBook = bookID;
                const idBooking = bookingID;
                const urlDeliver = `/api/books/deliver/${idBook}`;
                let dateActual = new Date();
                dateActual = new Intl.DateTimeFormat("az").format(dateActual).replace("/", "-");
                Swal.fire({
                    title: 'Deliver',
                    text: `Do you want to add a review, for the book : ${idBook} ?`,
                    icon: 'warning',
                    showDenyButton: true,
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#474E68',
                    confirmButtonText: 'Yes',
                    denyButtonText: `Don't review`,
                    cancelButtonText: 'Cancel'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $("#count").val(count);
                        $("#bookID").val(idBook);
                        $("#bookingID").val(idBooking);
                        $('#modalStar').modal('show');
                    } else if (result.isDenied) {
                        const data = {
                            idBooking,
                            score: 0,
                            review: null,
                            deliver_date_review: dateActual
                        }
                        fetch(urlDeliver, {
                            method: 'POST',
                            body: JSON.stringify(data),
                            headers: {
                                "Content-Type": "application/json; charset=UTF-8"
                            }
                        })
                        document.getElementById(`row${count}`).remove();
                        if(tbodyActive.innerHTML === "") {
                            noDataFound();
                        }
                    }
                })
            } catch (error) {
                console.error(":error ", error)
            }
        }

    // INFO ACTIVE
        // TODO ✅ RESERVAS ACTIVAS
        async function inforActive(partnerID) {
            try {
                spinnerActive.style.display = "inline-block";
                tableA.destroy();
                tbodyActive.innerHTML = "";
            } catch (error) {}
            indice = 2;
            const idPartner = partnerID;
            const urlActive = `/api/partners/info/${idPartner}`;
            fetch(urlActive)
                .then(response => response.json())
                .then((data) => {
                    setTimeout(() => {
                        obtenerPartner(data)
                    }, 1000);
                });
        }

        // TODO ✅ OBTENER INFORMACION DEL PARTNER Y BOOKINGS
        async function obtenerPartner(data) {
            let existsData = false;
            if(data.success === true) {
                const fecha = new Date();
                const actualDate = new Intl.DateTimeFormat("en-US").format(fecha);
                let count = 0;
                let body = "";
                tbodyActive.innerHTML = "";
                for (let elemento of data.data) {
                    count += 1;
                    const reserved = elemento.reserved;
                    const idBookingReview = elemento.bookingID_review;
                    let reservationDate = new Date(elemento.reservation_date);
                    reservationDate = new Intl.DateTimeFormat("en-US").format(reservationDate);
                    let deliverDateReview = new Date(elemento.deliver_date_review);
                    deliverDateReview = new Intl.DateTimeFormat("en-US").format(deliverDateReview);
                    if (reserved === 1 && idBookingReview === null) {
                        body += `
                            <tr id="row${count}" value="row${count}">
                                <td>${elemento.title}</td>
                                <td>${elemento.isbn}</td>
                                <td>${elemento.author}</td>
                                <td>${reservationDate}</td>
                                <td>
                                    <button id="btnDeliver" onClick=deliverBook(` + elemento.bookID + `,` + elemento.bookingID + `,` + count + `) class="btn btn-warning" title="Deliver Book">
                                        <i class="fa-regular fa-handshake"></i> Deliver Book
                                    </button>
                                </td>
                            </tr>`;
                        createdTableActive();
                        existsData = true;
                    } else {
                        await noDataFoundActive();
                        existsData = false;
                    }
                    if(existsData){
                        setTimeout(async () => {
                            tbodyActive.innerHTML = body;
                        }, 400)
                    }
                }
            } else {
            await noDataFoundActive();
            }
        }

        // TODO ✅ CREAR TABLA
        async function createdTableActive() {
            setTimeout(async () => {
                $(document).ready(function () {
                    tableA = $("#tablePartnerActive").DataTable({
                        searching: true,
                        ordering: true,
                        info: true,
                        responsive: true,
                        order: [[4, "desc"]],
                        lengthMenu: [[5, 10, 15, 25, 50], [5, 10, 15, 25, 50]],
                        pageLength: 5,
                        retrieve: true
                    });
                });
                spinnerActive.style.display = "none";
            }, 600)
        }


    // INFO HISTORY
        //TODO ✅ INFORMATION HISTORY RESERVED
        async function inforHistory(partnerID) {
            try {
                spinnerHistory.style.display = "inline-block";
                tableB.destroy();
                tbodyHistory.innerHTML = "";
            } catch (error) {}
            indice = 3;
            const idPartner = partnerID;
            const urlHistory = `/api/partners/info/${idPartner}`;
            fetch(urlHistory)
                .then(response => response.json())
                .then((data) => {
                    setTimeout(() => {
                        obtenerHistory(data)
                    }, 1000);
                });
        }

        // TODO ✅ OBTENER HISTORY
        async function obtenerHistory(data) {
            let existsData = false;
            if(data.success === true) {
                const fecha = new Date();
                const actualDate = new Intl.DateTimeFormat("en-US").format(fecha);
                let count = 0;
                let bodyHistory = "";
                tbodyHistory.innerHTML = "";
                for (let elemento of data.data) {
                    count += 1;
                    const starTotal = 5;
                    const reserved = elemento.reserved;
                    const idBookingReview = elemento.bookingID_review;
                    const review = elemento.review;
                    const score = elemento.score;
                    let reservationDate = new Date(elemento.reservation_date);
                    reservationDate = new Intl.DateTimeFormat("en-US").format(reservationDate);
                    let deliverDateReview = new Date(elemento.deliver_date_review);
                    deliverDateReview = new Intl.DateTimeFormat("en-US").format(deliverDateReview);
                    const starPercentage = elemento.score / starTotal * 100;
                    const starPercentageRounded = `${Math.round(starPercentage / 10) * 10}%`;
                    if (reserved === 0 || (reserved === 1 && idBookingReview !== null)) {
                        bodyHistory += `
                            <tr  id="row${count}" value="row${count}">
                                <td>${elemento.title}</td>
                                <td>${elemento.isbn}</td>
                                <td>${elemento.author}</td>
                                <td>${reservationDate}</td>
                                <td>${deliverDateReview}</td>
                                <td>
                                    <div class="stars-outer">
                                        <div class="stars-inner" style="width: ${starPercentageRounded}; cursor: pointer" title="score ${elemento.score}">
                                        </div>
                                    </div>
                                </td>
                                <td>${elemento.review}</td>
                            </tr>`;
                        createdTableHistory();
                        existsData = true;
                    } else {
                        await noDataFoundHistory();
                        existsData = false;
                    }
                    if(existsData){    
                        setTimeout(async () => {
                            tbodyHistory.innerHTML = bodyHistory;
                        }, 400)
                    }
                }
            } else {
                noDataFoundHistory();
            }
        }

        // TODO ✅ CREAR TABLA HISTORY
        async function createdTableHistory() {
            setTimeout(async () => {
                $(document).ready(function () {
                    tableB = $("#tablePartnerHistory").DataTable({
                        searching: true,
                        ordering: true,
                        info: true,
                        responsive: true,
                        order: [[4, "desc"]],
                        lengthMenu: [[5, 10, 15, 25, 50], [5, 10, 15, 25, 50]],
                        pageLength: 5,
                        retrieve: true
                    });
                });
                spinnerHistory.style.display = "none";
            }, 600);
        }

    // ACTIVAR BUTTON / SLIDER
        // TODO ✅ ACTIVA EL SLIDER ACTUAL
        async function muestraSlides(n) {
            let i;
            if (n > sliderButton.length) {
                indice = 1;
            }
            if (n < 1) {
                indice = sliderButton.length;
            }
            if (n === 4){
                n = 1;
                indice = 1;
            }

            for (i = 0; i < sliderButton.length; i++) {
                //sliderButton[i].style.display = "none";
                sliderButton[i].classList.remove("isActivo");
                linesButton[i].classList.remove("isActive");
                sliderCard[i].classList.remove("isActive");
                bloque[i].classList.remove("isActivo");
                bloque[i].classList.remove("isAuto");
            }
            sliderButton[indice - 1].style.display = "flex";
            sliderButton[indice - 1].classList.add("isActivo");
            linesButton[indice - 1].classList.add("isActive");
            sliderCard[indice - 1].classList.add("isActive");
            bloque[indice - 1].classList.add("isActivo");
            bloque[indice - 1].classList.add("isAuto");

        }

        // TODO ✅ AVANZAR ENTRE LOS SLIDERS
        async function avanzaSlide(n, idPartner) {
            muestraSlides((indice += n));
            try {
                if(indice === 1){
                    infor(idPartner)
                } else if (indice === 2) {
                    inforActive(idPartner)
                } else if (indice === 3) {
                    inforHistory(idPartner)
                }
            } catch (error) {
                console.error(error);
            }
        }

        //TODO ✅ ACTIVAR BUTTONS
        sliderButton.forEach((cadaLi, i) => {
            sliderButton[i].addEventListener("click", () => {
                sliderButton.forEach((cadaLi, i) => {
                    sliderButton[i].classList.remove("isActivo");
                    linesButton[i].classList.remove("isActive");
                    sliderCard[i].classList.remove("isActive");
                    bloque[i].classList.remove("isActivo");
                    bloque[i].classList.remove("isAuto");
                });
                sliderButton[i].classList.add("isActivo");
                linesButton[i].classList.add("isActive");
                sliderCard[i].classList.add("isActive");
                bloque[i].classList.add("isActivo");
                bloque[i].classList.add("isAuto");
            });
        });

        // TODO ✅ ACTIVAR BUTTON LOW
        linesButton.forEach((cadaLi, i) => {
            linesButton[i].addEventListener("click", () => {
                linesButton.forEach((cadaLi, i) => {
                    sliderButton[i].classList.remove("isActivo");
                    linesButton[i].classList.remove("isActive");
                    sliderCard[i].classList.remove("isActive");
                    bloque[i].classList.remove("isActivo");
                    bloque[i].classList.remove("isAuto");
                });
                sliderButton[i].classList.add("isActivo");
                linesButton[i].classList.add("isActive");
                sliderCard[i].classList.add("isActive");
                bloque[i].classList.add("isActivo");
                bloque[i].classList.add("isAuto");
            });
        });

    async function reservedBook(partnerID) {
        const idPartner = partnerID;
    }

</script>