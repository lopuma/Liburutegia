<link href="/style/styleBooks/infoBook.css" rel="stylesheet" />
{{> modalEditBook}}
{{> modalReserveBook}}
<div class="Info-contenedor" id="stateInfoBook">
    {{#each bookData}}
        <script>
            let _BOOKID = {{this.bookID}};
            let _RATING = {{#if this.rating}}{{this.rating}}{{else}}0{{/if}};
        </script>
    {{/each}}
    <div class="Info-header">
        <div class="Info-cover">    
            <div class="Cover-upload Upload" >
                <form name="formUpload" id="formUpload">
                    <button type="submit" disabled hidden aria-hidden="true"></button>
                    <div class="Upload-group" id="imgBox">
                        <input type="file" class="Upload-file" name="coverImage" accept="image/*" id="coverImage" onchange="loadFile(event)">
                        <label for="coverImage" class="Upload-icon"><i class="fa-solid fa-cloud-arrow-up"></i></label>
                    </div>
                    {{#each dataCover}}
                        <script defer>
                            let nameCover = `{{this.nameCover}}`;
                            let urlCover = decodeURIComponent(`{{this.urlCover}}`);
                            if(nameCover) {
                                imgBox.style.backgroundImage = `url(${urlCover})`;
                            } else {
                                imgBox.style.backgroundImage = `url(/img/covers/default-image.png)`;
                            }
                        </script>
                    {{/each}}
                    <label class="Upload-success" id="successUpload"></label>
                    <div class="New-boxes" id="newBoxesID" hidden>
                        <div class="Input-box">
                            <div class="Box-animation Animation">
                                <div class="Box">
                                    {{#each bookData}}
                                        <input type="text" class="Animation-input form-control" id="bookCoverID" name="idBook" value={{this.bookID}} required>
                                    {{/each}}
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Upload-btn">
                        <input type="button" value="Save Cover !" class="btn btn-dark" id="btnUpload" onClick="uploadCover()">            
                    </div>
                </form>
            </div>
        </div>
        <div class="Contents-information Information">
            {{#each bookData}}
                <div class="Information-title Title">
                    <i class="Title-i fa-solid fa-book-open"></i>
                    <h1 class="Title-h1">
                        {{this.title}}
                    </h1>
                </div>
                <div class="Information-author Author">
                    <label>by <span>{{this.author}}</span></label>
                </div>
                <h2 class="Information-subtitle">Bibliographic Record</h2>
                <hr class="Container-hr">
                <!-- TODO BOOK ID -->
                <div class="Information-boxes">
                    <div class="Information-row">
                        <h3 class="Information-h3">
                            Book ID:
                        </h3>
                    </div>
                    <div class="Information-cell">
                        <span class="Information-span" id="informationBookID">
                            <script>
                                function fillZeros(id){
                                    
                                    let num = id.toString();
                                    let large = 10;
                                    for (let i = 0; i < (large - num.length); i++) {
                                        num = "0" + num
                                    }
                                    return num
                                }
                                document.getElementById("informationBookID").innerHTML = fillZeros({{this.bookID}});
                            </script>
                        </span>
                    </div>
                </div>
                <!-- TODO NUM REFERENCE -->
                <div class="Information-boxes">
                    <div class="Information-row">
                        <h3 class="Information-h3">
                            Num Reference:
                        </h3>
                    </div>
                    <div class="Information-cell">
                        <span class="Information-span">
                            {{this.numReference}}
                        </span>
                    </div>
                </div>
                <!-- TODO FECHA COMPRA -->
                <div class="Information-boxes">
                    <div class="Information-row">
                        <h3 class="Information-h3">
                            Date of purchase:
                        </h3>
                    </div>
                    <div class="Information-cell">
                        <span class="Information-span">
                            {{this.purchase_date}}
                        </span>
                    </div>
                </div>
                <!-- TODO ISBN -->
                <div class="Information-boxes">
                    <div class="Information-row">
                        <h3 class="Information-h3">
                            Print ISBN:
                        </h3>
                    </div>
                    <div class="Information-cell">
                        <span class="Information-span">
                            {{this.isbn}}
                        </span>
                    </div>
                </div>
                <details class="Information-details">
                    <summary class="Information-summary"><dfn>....more details<dfn></summary>
                    <div class="Information-boxes">
                        <div class="Information-row">
                            <h3 class="Information-h3">
                                Editorial:
                            </h3>
                        </div>
                        <div class="Information-cell">
                            <span class="Information-span">
                                {{this.editorial}}
                            </span>
                        </div>
                    </div>
                    <div class="Information-boxes">
                        <div class="Information-row">
                            <h3 class="Information-h3">
                                Collection:
                            </h3>
                        </div>
                        <div class="Information-cell">
                            <span class="Information-span">
                                {{this.collection}}
                            </span>
                        </div>
                    </div>
                    <div class="Information-boxes">
                        <div class="Information-row">
                            <h3 class="Information-h3">
                                Category:
                            </h3>
                        </div>
                        <div class="Information-cell">
                            <span class="Information-span">
                                {{this.type}}
                            </span>
                        </div>
                    </div>
                    <div class="Information-boxes">
                        <div class="Information-row">
                            <h3 class="Information-h3">
                                Language:
                            </h3>
                        </div>
                        <div class="Information-cell">
                            <span class="Information-span">
                                {{this.language}}
                            </span>
                        </div>
                    </div>
                    <div class="Information-boxes">
                        <div class="Information-row">
                            <h3 class="Information-h3">
                                Observations:
                            </h3>
                        </div>
                        <div class="Information-cell isObservation">
                            <span class="Information-span">
                                {{this.observation}}
                            </span>
                        </div>
                    </div>
                </details>
            {{/each}}
        </div>
        <div class="Contents-totalReview Review">
            <div class="Review-header">
                {{#each bookData}}
                    <h3>   CUSTOMER REVIEWS   </h3>
                    <div class="Review-star">
                        <div class="stars-outer">
                            <div class="stars-inner" id="totalScore" style="cursor: pointer" title="Total score {{this.rating}} star">
                            </div>
                        </div>
                        <span>{{#if this.rating}}{{this.rating}} of 5{{else}}0 of 5{{/if}}</span>
                    </div>
                    <div class="Review-lastupdate Update">
                        <div class="Update-a">
                            <i class="fa-regular fa-pen-to-square"></i>
                            <span class="Update-span">Last Update:</span>
                        </div>
                        <div class="Update-b">
                            <strong>{{this.lastUpdate}}</strong>
                        </div>
                    </div>
                    <div class="Review-total Total">
                        <div class="Total-a">
                            <i class="fa-solid fa-chart-line"></i>
                            <span class="Update-span">Review:</span>
                        </div>
                        <div class="Total-b">
                            <a href="#customerReviews"><span class="Review-span">{{#if this.numVotes}}{{this.numVotes}} Overall Ratings{{else}}0 Overall Ratings{{/if}}</span></a>
                        </div>
                    </div>
                    {{#unless this.reserved}}
                        <div class="Review-reserved Reserved">
                            <div class="Reserved-a">
                                <i class="fa-solid fa-book"></i> 
                                <span>The book is</span>
                            </div>
                            <div class="Reserved-b">
                                <span class="badge rounded-pill bg-success" style="cursor: pointer; font-size: 1em">Available</span>
                            </div>
                        </div>
                    {{/unless}}
                {{/each}}
                {{#if deliverData}}
                    {{#each deliverData}}
                        <div class="Review-reserved">
                            {{#if this.reserved}}
                                <div class="Review-avaliable">
                                    <i class="fa-solid fa-book"></i> The book is  
                                    <span class="badge rounded-pill bg-warning text-dark" style="cursor: pointer; font-size: 1em">Not available</span>
                                </div>
                                <div class="Review-delivered Delivered">
                                    <div class="Delivered-head">Book reserved by:</div>
                                    <div class="Delivered-reserved" id="reserveBy">
                                        <i class="fa-solid fa-user-check"></i>
                                        <a href="/workspace/partners/info/{{this.partnerID}}">
                                            <span class="Delivered-span">{{this.partnerDni}}</span>
                                        </a>
                                    </div>
                                </div>
                            {{/if}}
                        </div>
                    {{/each}}
                {{/if}}
            </div>
            <div class="Review-actions">
                {{#each bookData}}
                    <h3>   ACTIONS   </h3>
                    <button id="btnEditBook" onClick=_editBook({{this.bookID}}) type="button" class="Action-btn btn btn-outline-info" title="Edit Book" data-toggle="modal" data-target="#modalEditBook" href="#edit"><i class="fa-regular fa-pen-to-square"></i> Edit Information</button>
                    {{#unless this.reserved}}
                        <button id="btnReserveBook" onClick="reserveBook({{this.bookID}}, '{{this.title}}')" class="Action-btn btn btn-secondary" title="Reserve a Book" data-toggle="modal" data-target="#modalReserveBook"><i class="fa-solid fa-calendar-days"></i> Reserve a Book</button>
                    {{/unless}}
                    <button id="btnInfoDeleteBook" class="Action-btn isDelete btn btn-danger" onClick=deleteBook({{this.bookID}})  type="button">Delete</button>
                {{/each}}
            </div>
        </div>
    </div>
    <div class="Info-container Container" name="customerReviews" id="customerReviews">
        <div class="Container-header">
            <i class="Container-i fa-solid fa-message"></i>
            <span class="Container-span">Reviews</span>
        </div>
        <hr class="Container-hr">
        <div class="Container-review" id="containerReview"></div>
    </div>
</div>
<script defer src="/scripts/Globals/funcGlobals.js" type="text/javascript"></script>
<script defer type="text/javascript">
    const imgBox = document.getElementById('imgBox');
    const btnEditBook = document.getElementById('btnEditBook');
    const btnReserveBook = document.getElementById('btnReserveBook');
    const btnDeletetBook = document.getElementById('btnDeletetBook');
    const containerReview =  document.getElementById('containerReview');
    const btnUpload = document.getElementById('btnUpload');
    const coverImage = document.getElementById('coverImage');
    const bookCoverID = document.getElementById('bookCoverID');
    try {
        if ($('#stateInfoBook').val() === '') { // 
            _STATEINFOBOOK = true;
        }
    } catch (error) { }
    function obtenerPorcentaje(_RATING_) {
        const starPercentage = _RATING_ / 5 * 100;
        const starPercentageRounded = `${Math.round(starPercentage / 10) * 10}%`;
        return starPercentageRounded;
    }
    try{
        document.getElementById('totalScore').style.width = obtenerPorcentaje(_RATING);
    } catch (error) { }
    var loadFile = (event) => {
        imgBox.style.backgroundImage = "url(" + URL.createObjectURL(event.target.files[0]) + ")";
    };
    async function _editBook(idBook) {
        opcion = 'edit';
        const bookID = idBook;
        await globalEditBook(bookID);
    }
    async function reserveBook(bookID, bookTitle){
        const idBook= bookID;
        const titleBook= bookTitle;
        await globalReserveBook(idBook, titleBook, null, null);
    }
    async function uploadCover() {
        const formData = new FormData();
        if(coverImage.value !== "" || coverImage.files[0] !== undefined) {
            formData.append('idBook', bookCoverID.value);
            formData.append('coverImage', coverImage.files[0]);
            await fetch('/api/books/frontPage', {
            method: 'POST',
            body: formData
            })
                .then((response) =>  response.json())
                .then((data) => {
                    document.getElementById('successUpload').classList.add("isEnable");
                    document.getElementById('successUpload').innerHTML = data.messageSuccess;
                    imgBox.style.backgroundImage = `url(${decodeURIComponent(data.urlCover)})`;
                });
            setTimeout(() => {
                document.getElementById('successUpload').classList.remove("isEnable");
                document.getElementById('successUpload').innerHTML = "";
            }, 2000);
            
        } else {
            document.getElementById('successUpload').classList.add("isEnableError");
            document.getElementById('successUpload').innerHTML = "No cover has been selected";
            setTimeout(() => {
                document.getElementById('successUpload').classList.remove("isEnableError");
                document.getElementById('successUpload').innerHTML = "";
            }, 5000);
        }
    }
    async function deleteBook(idBook){
        opcion = 'delete';
        const bookID = idBook;
        await globalDeleteBook(bookID);
    }
    (async ( ) => {
        const bookID = _BOOKID;
        const urlReviews = `/api/books/info/reviews/${bookID}` 
        fetch(urlReviews, {
            method: "GET",
            headers: {
                "Content-type": "application/json; charset=UTF-8"
            }
        })
            .then((response) => response.json())
            .then((data) => createCardReview(data));
    }) ( )
    async function createCardReview(data){
        try {
            if(data.success) {
                const review = data.data;
                let valores = Object.values(review); //
                let textRate = "";
                let colorStar = "";
                let textShadow = "";
                for(let i=0; i< valores.length; i++){
                    const reviewOn = valores[i].reviewOn;
                    const bgColor = generarNuevoColor();
                    const score = obtenerPorcentaje(valores[i].score);
                    const dateReview = moment(valores[i].dateReview).format("MMMM Do, YYYY HH:mm A");
                    const review = valores[i].review;
                    const fullName = valores[i].fullName;
                    if(score === "100%") {
                        textRate =  "I'm lovin it ";
                        colorStar = "#fe7";
                        textShadow = "0 0 10px #006E7F";
                        
                    } else if(score === '80%') {
                        textRate =  "I like it! ";
                    } else if(score === '60%') {
                        textRate =  "Alright! ";
                    } else if(score === '40%') {
                        textRate =  "i like little ";
                    } else {
                        textRate =  "I don't like it ";
                    }
                    if (reviewOn === 1) { 
                        template  = `
                            <div class='Review-box'>
                                <div class='Review-name'>
                                    <div class='Review-icon'>
                                        <i class='fa-solid fa-circle-user' style='color: ${bgColor}'></i><br>
                                    </div>
                                    <div class='Review-fullname'>${fullName}</div>
                                </div>
                                <div class='Review-dateReview'>
                                    <span class='Review-date'>Revised on ${dateReview}</span>
                                </div>
                                <div class='Review-content'>
                                    <div class='Review-score'>
                                        <div class='stars-outer'>
                                            <div class='stars-inner' id='totalScore' style='width: ${score}' title='Total score ${valores[i].score} star'>
                                            </div>
                                        </div>
                                        <div class='Review-rate'>
                                            ${textRate}
                                        </div>
                                    </div>
                                    <div class='Review-message'>${review}</div>
                                </div>
                            </div>
                        `;
                        containerReview.innerHTML += template;
                    }
                }
            } else { 
                template = `<h2 class="linea"><span>There are currently no reviews</span></h2>`;
                containerReview.innerHTML = template;
            }
        } catch (error) { }
    }
</script>